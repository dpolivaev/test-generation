package login.testgeneration

strategy loginPageTests

let script.precondition.alias be "background"
let testcase.alias be "scenario"
let scenario.precondition.alias be "given"
let scenario.focus.alias be "when"
let scenario.verification.alias be "then"

let script.name be "login/LoginTest"	
let script.feature be "Log in"
let script.description be "I want to be logged in after submitting correct credentials" 
 let lazy scenario.name be (:password  " password and " :email " email entered")

 let background be "go to page <page> (page:login)"
 
 let given#1 be "<email> mail address is entered (:email)"
 let given#2 be "<password> password is entered (:password)"
 let when be "submit is clicked"
 let then be "page <pageAfterSubmit> is opened(:pageAfterSubmit)"
 
 let email be "valid"{ 
 	let password be "valid", "invalid", "empty"
 }, 
 "invalid" {
 	let password be "valid"
 }, 
 "empty" {
 	let password be "valid", "empty"
 }
 
 let pageAfterSubmit be if(:email == "valid" && :password == "valid") "loggedIn" else "login"
 
 
run strategy goal loginPageTests 
	output "output/xml" , apply "/cucumber.xslt" output "generated-tests/feature"
